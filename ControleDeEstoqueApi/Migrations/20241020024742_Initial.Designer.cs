// <auto-generated />
using System;
using ControleDeEstoqueApi.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ControleDeEstoqueApi.Migrations
{
    [DbContext(typeof(DbConnection))]
    [Migration("20241020024742_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Agents.Funcionario", b =>
                {
                    b.Property<int>("id_funcionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_funcionario"));

                    b.Property<int>("cargo")
                        .HasColumnType("integer");

                    b.Property<int>("codigo_do_funcionario")
                        .HasColumnType("integer");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("data_nascimento")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nome_do_funcionario")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<decimal>("salario")
                        .HasColumnType("numeric");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("situacao")
                        .HasColumnType("boolean");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_funcionario");

                    b.HasIndex("codigo_do_funcionario")
                        .IsUnique();

                    b.HasIndex("cpf")
                        .IsUnique();

                    b.ToTable("funcionario");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Estoque", b =>
                {
                    b.Property<int>("id_estoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_estoque"));

                    b.Property<int>("codigo_do_funcionario")
                        .HasColumnType("integer");

                    b.Property<int>("codigo_do_produto")
                        .HasColumnType("integer");

                    b.Property<string>("nome_do_fabricante")
                        .IsRequired()
                        .HasColumnType("character varying(255)");

                    b.Property<string>("nome_do_produto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("nome_fantasia_do_fornecedor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("quantidade_do_produto")
                        .HasColumnType("integer");

                    b.HasKey("id_estoque");

                    b.HasIndex("codigo_do_funcionario");

                    b.HasIndex("codigo_do_produto")
                        .IsUnique();

                    b.HasIndex("nome_do_fabricante");

                    b.HasIndex("nome_fantasia_do_fornecedor");

                    b.ToTable("estoque");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Fabricante", b =>
                {
                    b.Property<int>("id_fabricante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_fabricante"));

                    b.Property<int>("codigo_do_fabricante")
                        .HasColumnType("integer");

                    b.Property<int>("codigo_do_funcionario")
                        .HasColumnType("integer");

                    b.Property<string>("nome_do_fabricante")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id_fabricante");

                    b.HasIndex("codigo_do_fabricante")
                        .IsUnique();

                    b.HasIndex("codigo_do_funcionario")
                        .IsUnique();

                    b.HasIndex("nome_do_fabricante")
                        .IsUnique();

                    b.ToTable("fabricante");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Fornecedor", b =>
                {
                    b.Property<int>("id_fornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_fornecedor"));

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("codigo_do_fornecedor")
                        .HasColumnType("integer");

                    b.Property<int>("codigo_do_funcionario")
                        .HasColumnType("integer");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nome_fantasia_do_fornecedor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("site")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("tempo_de_entrega")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_fornecedor");

                    b.HasIndex("cnpj")
                        .IsUnique();

                    b.HasIndex("codigo_do_fornecedor")
                        .IsUnique();

                    b.HasIndex("codigo_do_funcionario")
                        .IsUnique();

                    b.HasIndex("nome_fantasia_do_fornecedor")
                        .IsUnique();

                    b.ToTable("fornecedor");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Item_Venda", b =>
                {
                    b.Property<int>("id_item_venda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_item_venda"));

                    b.Property<int>("codigo_da_venda")
                        .HasColumnType("integer");

                    b.Property<int>("codigo_do_produto")
                        .HasColumnType("integer");

                    b.Property<int>("quantidade_do_produto")
                        .HasColumnType("integer");

                    b.Property<decimal>("valor_unitario")
                        .HasColumnType("numeric");

                    b.HasKey("id_item_venda");

                    b.HasIndex("codigo_da_venda");

                    b.HasIndex("codigo_do_produto")
                        .IsUnique();

                    b.ToTable("item_venda");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Pagamento", b =>
                {
                    b.Property<int>("id_pagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_pagamento"));

                    b.Property<string>("nome_do_pagamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id_pagamento");

                    b.HasIndex("nome_do_pagamento")
                        .IsUnique();

                    b.ToTable("pagamento");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Produto", b =>
                {
                    b.Property<int>("id_produto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_produto"));

                    b.Property<int>("codigo_do_fabricante")
                        .HasColumnType("integer");

                    b.Property<int>("codigo_do_fornecedor")
                        .HasColumnType("integer");

                    b.Property<int>("codigo_do_produto")
                        .HasColumnType("integer");

                    b.Property<DateTime>("data_do_cadastro_do_produto")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("descricao_do_produto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("nome_do_produto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int>("quantidade_minima_para_compra")
                        .HasColumnType("integer");

                    b.Property<decimal>("valor_de_compra")
                        .HasColumnType("numeric");

                    b.Property<decimal>("valor_de_venda")
                        .HasColumnType("numeric");

                    b.HasKey("id_produto");

                    b.HasIndex("codigo_do_fabricante");

                    b.HasIndex("codigo_do_fornecedor");

                    b.HasIndex("codigo_do_produto")
                        .IsUnique();

                    b.ToTable("produto");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Venda", b =>
                {
                    b.Property<int>("id_venda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id_venda"));

                    b.Property<int>("codigo_da_venda")
                        .HasColumnType("integer");

                    b.Property<int>("codigo_do_funcionario")
                        .HasColumnType("integer");

                    b.Property<DateTime>("data_da_venda")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("valor_total_da_venda")
                        .HasColumnType("double precision");

                    b.HasKey("id_venda");

                    b.HasIndex("codigo_da_venda")
                        .IsUnique();

                    b.HasIndex("codigo_do_funcionario");

                    b.ToTable("venda");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.VendaPagamento", b =>
                {
                    b.Property<int>("id_venda")
                        .HasColumnType("integer");

                    b.Property<int>("id_pagamento")
                        .HasColumnType("integer");

                    b.Property<double>("valor_do_pagamento")
                        .HasColumnType("double precision");

                    b.HasKey("id_venda", "id_pagamento");

                    b.HasIndex("id_pagamento");

                    b.ToTable("VendaPagamentos");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Estoque", b =>
                {
                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Agents.Funcionario", "Funcionario")
                        .WithMany("Estoque")
                        .HasForeignKey("codigo_do_funcionario")
                        .HasPrincipalKey("codigo_do_funcionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Produto", "Produto")
                        .WithOne("Estoque")
                        .HasForeignKey("ControleDeEstoqueApi.Domain.Models.Estoque", "codigo_do_produto")
                        .HasPrincipalKey("ControleDeEstoqueApi.Domain.Models.Produto", "codigo_do_produto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Fabricante", "Fabricante")
                        .WithMany("Estoque")
                        .HasForeignKey("nome_do_fabricante")
                        .HasPrincipalKey("nome_do_fabricante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Fornecedor", "Fornecedor")
                        .WithMany("Estoque")
                        .HasForeignKey("nome_fantasia_do_fornecedor")
                        .HasPrincipalKey("nome_fantasia_do_fornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");

                    b.Navigation("Fornecedor");

                    b.Navigation("Funcionario");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Fabricante", b =>
                {
                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Agents.Funcionario", "Funcionario")
                        .WithOne("Fabricante")
                        .HasForeignKey("ControleDeEstoqueApi.Domain.Models.Fabricante", "codigo_do_funcionario")
                        .HasPrincipalKey("ControleDeEstoqueApi.Domain.Models.Agents.Funcionario", "codigo_do_funcionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Fornecedor", b =>
                {
                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Agents.Funcionario", "Funcionario")
                        .WithOne("Fornecedor")
                        .HasForeignKey("ControleDeEstoqueApi.Domain.Models.Fornecedor", "codigo_do_funcionario")
                        .HasPrincipalKey("ControleDeEstoqueApi.Domain.Models.Agents.Funcionario", "codigo_do_funcionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Item_Venda", b =>
                {
                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Venda", "Venda")
                        .WithMany("Item_Venda")
                        .HasForeignKey("codigo_da_venda")
                        .HasPrincipalKey("codigo_da_venda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Produto", "Produto")
                        .WithOne("Item_Venda")
                        .HasForeignKey("ControleDeEstoqueApi.Domain.Models.Item_Venda", "codigo_do_produto")
                        .HasPrincipalKey("ControleDeEstoqueApi.Domain.Models.Produto", "codigo_do_produto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Produto", b =>
                {
                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Fabricante", "Fabricante")
                        .WithMany("Produto")
                        .HasForeignKey("codigo_do_fabricante")
                        .HasPrincipalKey("codigo_do_fabricante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Fornecedor", "Fornecedor")
                        .WithMany("Produto")
                        .HasForeignKey("codigo_do_fornecedor")
                        .HasPrincipalKey("codigo_do_fornecedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Venda", b =>
                {
                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Agents.Funcionario", "Funcionario")
                        .WithMany("Venda")
                        .HasForeignKey("codigo_do_funcionario")
                        .HasPrincipalKey("codigo_do_funcionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.VendaPagamento", b =>
                {
                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Pagamento", "Pagamento")
                        .WithMany("VendaPagamentos")
                        .HasForeignKey("id_pagamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleDeEstoqueApi.Domain.Models.Venda", "Venda")
                        .WithMany("VendaPagamentos")
                        .HasForeignKey("id_venda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pagamento");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Agents.Funcionario", b =>
                {
                    b.Navigation("Estoque");

                    b.Navigation("Fabricante")
                        .IsRequired();

                    b.Navigation("Fornecedor")
                        .IsRequired();

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Fabricante", b =>
                {
                    b.Navigation("Estoque");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Fornecedor", b =>
                {
                    b.Navigation("Estoque");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Pagamento", b =>
                {
                    b.Navigation("VendaPagamentos");
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Produto", b =>
                {
                    b.Navigation("Estoque")
                        .IsRequired();

                    b.Navigation("Item_Venda")
                        .IsRequired();
                });

            modelBuilder.Entity("ControleDeEstoqueApi.Domain.Models.Venda", b =>
                {
                    b.Navigation("Item_Venda");

                    b.Navigation("VendaPagamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
